name: build sentry_forked_jsonnet

on:
  push:

jobs:
  dist:
    name: Create wheel and source distribution for sentry_forked_jsonnet
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - {os: ubuntu-latest, arch: aarch64}
        - {os: ubuntu-latest, arch: x86_64}
        - {os: macos-13, arch: x86_64}
        - {os: macos-14, arch: arm64}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          # Skip PyPy, 32-bit Windows, 32-bit Linux, and CPython before 3.10.
          # See https://cibuildwheel.readthedocs.io/en/stable/options/#examples_1
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_SKIP: "*-win32 pp* *-manylinux_i686 *-musllinux_i686 cp36-* cp37-* cp38-* cp39-*"
          CIBW_TEST_COMMAND: >
              python {package}/python/_jsonnet_test.py
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
  upload_all:
    name: Upload combined artifact for all wheels
    runs-on: ubuntu-latest
    needs: dist  # Ensure this runs after all dist jobs
    steps:
      - uses: actions/checkout@v4

      # Download all the artifacts from previous jobs
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: ./combined-wheels

      # Upload all downloaded wheels as a single artifact 
      - name: Upload all wheels as single artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha  }}
          path: ./combined-wheels/**